import { z } from 'zod';
declare let AccountTwoFaSettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ActivateUserRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AdminSettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AdminSettingsIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AffectedTenantAdministratorsFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AffectedUserFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmAssigneeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmAssignmentNotificationRuleTriggerConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let AlarmCommentSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmCommentIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmCommentInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmCommentNotificationRuleTriggerConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmConditionSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmConditionFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmConditionFilterKeySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmConditionSpecSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmCountQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmDataPageLinkSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmDataQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmNotificationRuleTriggerConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let AlarmRuleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AlarmScheduleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AllUsersFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AllowCreateNewDevicesDeviceProfileProvisionConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AllowedPermissionsInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AnyTimeScheduleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ApiUsageLimitNotificationRuleTriggerConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let ApiUsageStateFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let ArrayNodeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetProfileSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetProfileIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetProfileInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetSearchQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AssetSearchQueryFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let AssetTypeFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let AtomicIntegerSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AttributeExportDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AttributesEntityViewSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AuditLogSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AuditLogIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AutoVersionCreateConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let AwsSnsSmsProviderConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let BackupCodeTwoFaAccountConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BackupCodeTwoFaProviderConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BlobEntityIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BlobEntityInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BlobEntityWithCustomerInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BooleanFilterPredicateSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let BranchInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BulkImportRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BulkImportResult_Of_AssetSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BulkImportResult_Of_DeviceSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let BulkImportResult_Of_EdgeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ButtonSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ByteArrayResourceSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ByteBufferSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ChangePasswordRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CheckPreProvisionedDevicesDeviceProfileProvisionConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ClaimRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ClearRuleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ClientAttributesQueryingSnmpCommunicationConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CoapDeviceProfileTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let CoapDeviceTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let CoapDeviceTypeConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ColumnMappingSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ComparisonTsValueSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ComplexFilterPredicateSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let ComplexVersionCreateRequestSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let ComponentDescriptorSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ComponentDescriptorIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ContactBased_Of_objectSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ConverterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ConverterIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomMenuSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomMenuItemSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomTimeScheduleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomTimeScheduleItemSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomTranslationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomerSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomerIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomerInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let CustomerUsersFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DashboardSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DashboardIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DashboardInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DebugConverterEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DebugIntegrationEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DefaultCoapDeviceTypeConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DefaultDeviceConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DefaultDeviceProfileConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DefaultDeviceProfileTransportConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DefaultDeviceTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DefaultRuleChainCreateRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DefaultTenantProfileConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_EntityDataDiffSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_EntityDataInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_List_Of_BranchInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_List_Of_VersionedEntityInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_PageData_Of_EntityVersionSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_RepositorySettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_ResponseEntitySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_VoidSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeferredResult_Of_uuidSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeliveryMethodNotificationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceActivityNotificationRuleTriggerConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DeviceConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceCredentialsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceCredentialsIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceExportDataSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DeviceGroupOtaPackageSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileAlarmSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileProvisionConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceProfileTransportConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceSearchQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceSearchQueryFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DeviceTransportConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DeviceTypeFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DisabledDeviceProfileProvisionConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DurationAlarmConditionSpecSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let DynamicValue_Of_booleanSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DynamicValue_Of_doubleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DynamicValue_Of_intSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DynamicValue_Of_longSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let DynamicValue_Of_stringSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeEventSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeEventIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeInstructionsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeSearchQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EdgeSearchQueryFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EdgeTypeFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EfentoCoapDeviceTypeConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EmailDeliveryMethodNotificationTemplateSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EmailTwoFaAccountConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EmailTwoFaProviderConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntitiesByGroupNameFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntitiesLimitNotificationRuleTriggerConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityActionNotificationRuleTriggerConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityCountQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityDataDiffSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityDataInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityDataPageLinkSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityDataQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityDataSortOrderSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityExportData_Of_objectSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityGroupSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityGroupExportDataSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityGroupFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityGroupIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityGroupInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityGroupListFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityGroupNameFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityKeySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityListFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityLoadErrorSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityNameFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityRelationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityRelationInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityRelationsQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntitySubtypeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityTypeFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityTypeLoadResultSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityTypeVersionCreateConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityTypeVersionLoadConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityTypeVersionLoadRequestSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityVersionSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityViewSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityViewIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityViewInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityViewSearchQuerySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EntityViewSearchQueryFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EntityViewTypeFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let ErrorEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let EscalatedNotificationRuleRecipientsConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EventFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EventIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let EventInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ExportableEntity_Of_EntityIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let FaviconSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let FeaturesInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let FilterPredicateValue_Of_booleanSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let FilterPredicateValue_Of_doubleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let FilterPredicateValue_Of_intSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let FilterPredicateValue_Of_longSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let FilterPredicateValue_Of_stringSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let GroupEntityExportDataSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let GroupPermissionSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let GroupPermissionIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let GroupPermissionInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let HasId_Of_objectSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let HomeDashboardSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let HomeDashboardInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ImageExportDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let InputStreamSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let IntegrationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let IntegrationIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let IntegrationInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let IntegrationLifecycleEventNotificationRuleTriggerConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let JWT_PairSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let JWT_SettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let JsonNodeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let JsonTransportPayloadConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let KeyFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let KeyFilterPredicateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LastVisitedDashboardInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LicenseUsageInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LifeCycleEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let LoginRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LoginResponseSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LoginWhiteLabelingParamsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LwM2MBootstrapServerCredentialSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LwM2mInstanceSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LwM2mObjectSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let LwM2mResourceObserveSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let Lwm2mDeviceProfileTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let Lwm2mDeviceTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let MappingSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let MergedGroupPermissionInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let MergedGroupTypePermissionInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let MergedUserPermissionsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let MicrosoftTeamsDeliveryMethodNotificationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let MicrosoftTeamsNotificationTargetConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let MqttDeviceProfileTransportConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let MqttDeviceTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let NewPlatformVersionNotificationRuleTriggerConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NoSecLwM2MBootstrapServerCredentialSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NodeConnectionInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationDeliveryMethodConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationPrefSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRequestConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRequestIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRequestInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRequestPreviewSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRequestStatsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRuleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRuleConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRuleIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRuleInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRuleRecipientsConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationRuleTriggerConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationSettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationTargetSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationTargetConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationTemplateConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NotificationTemplateIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let NumericFilterPredicateSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let OAuth2BasicMapperConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2ClientInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2ClientRegistrationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2ClientRegistrationTemplateIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2CustomMapperConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2DomainInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2InfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2MapperConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2MobileInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2ParamsInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OAuth2RegistrationInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ObjectAttributesSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ObjectNodeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OriginatorEntityOwnerUsersFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OtaPackageSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OtaPackageIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OtaPackageInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let OtherConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PSKLwM2MBootstrapServerCredentialSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let PageData_Of_AlarmCommentInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_AlarmDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_AlarmInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_AssetInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_AssetProfileInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_AssetProfileSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_AssetSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_AuditLogSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_BlobEntityWithCustomerInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_ContactBased_Of_objectSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_ConverterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_CustomerInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_CustomerSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_DashboardInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_DeviceInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_DeviceProfileInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_DeviceProfileSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_DeviceSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EdgeEventSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EdgeInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EdgeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EntityDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EntityGroupInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EntityInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EntitySubtypeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EntityVersionSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EntityViewInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EntityViewSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_EventInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_IntegrationInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_IntegrationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_NotificationRequestInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_NotificationRuleInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_NotificationTargetSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_NotificationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_NotificationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_OtaPackageInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_QueueSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_RoleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_RuleChainSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_SchedulerEventInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_ShortEntityViewSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_TbResourceInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_TenantInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_TenantProfileSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_TenantSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_UserEmailInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_UserInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_UserSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_WidgetTypeInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PageData_Of_WidgetsBundleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PaletteSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PaletteSettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PlatformTwoFaSettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let PlatformUsersNotificationTargetConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let PowerSavingConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ProcessingStrategySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ProtoTransportPayloadConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let QueueSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let QueueIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RPKLwM2MBootstrapServerCredentialSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RateLimitsNotificationRuleTriggerConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RawDataEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let RelationEntityTypeFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RelationsQueryFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let RelationsSearchParametersSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RepeatingAlarmConditionSpecSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let ReportConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RepositorySettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RepositorySettingsInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ResetPasswordEmailRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ResetPasswordRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ResourceSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ResponseEntitySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RoleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RoleIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RpcSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RpcIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleChainSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleChainConnectionInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleChainDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleChainDebugEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let RuleChainExportDataSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let RuleChainIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleChainImportResultSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleChainMetaDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleChainOutputLabelsUsageSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let RuleNodeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let RuleNodeDebugEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let RuleNodeIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SaveDeviceWithCredentialsRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SaveOtaPackageInfoRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SchedulerEventSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SchedulerEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SchedulerEventIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SchedulerEventInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SchedulerEventWithCustomerInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SecuritySettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SelfRegistrationParamsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ShareGroupRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SharedAttributesSettingSnmpCommunicationConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let ShortCustomerInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ShortEntityViewSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SignUpRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SignUpSelfRegistrationParamsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SimpleAlarmConditionSpecSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SingleEntityFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SingleEntityVersionCreateRequestSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SingleEntityVersionLoadRequestSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SlackConversationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SlackDeliveryMethodNotificationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SlackNotificationDeliveryMethodConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SlackNotificationTargetConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SmppSmsProviderConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SmsDeliveryMethodNotificationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SmsProviderConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SmsTwoFaAccountConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SmsTwoFaProviderConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SnmpCommunicationConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SnmpDeviceProfileTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SnmpDeviceTransportConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SnmpMappingSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SolutionInstallResponseSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SpecificTimeScheduleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let StarredDashboardInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let StateEntityOwnerFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let StatisticsEventFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let StringFilterPredicateSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let SubmitStrategySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SystemAdministratorsFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SystemInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let SystemInfoDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TbImageDeleteResultSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TbResourceSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TbResourceIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TbResourceInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TelemetryEntityViewSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TelemetryMappingConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TelemetryQueryingSnmpCommunicationConfigSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let TenantSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantAdministratorsFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let TenantIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantProfileSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantProfileConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantProfileDataSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantProfileIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantProfileQueueConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantSolutionTemplateDetailsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantSolutionTemplateInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TenantSolutionTemplateInstructionsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TestSmsRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ThingsboardCredentialsExpiredResponseSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ThingsboardErrorResponseSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ToDeviceRpcRequestSnmpCommunicationConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let ToServerRpcRequestSnmpCommunicationConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TotpTwoFaAccountConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TotpTwoFaProviderConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TransportPayloadTypeConfigurationSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TsValueSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TwilioSmsProviderConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let TwoFaAccountConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TwoFaAccountConfigUpdateRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TwoFaProviderConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let TwoFaProviderInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UpdateMessageSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UsageInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserDashboardsInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserEmailInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserGroupListFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let UserIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserListFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserNotificationSettingsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserPasswordPolicySchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let UserRoleFilterSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let UsersFilterSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let VersionCreateConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let VersionCreateRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let VersionCreationResultSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let VersionLoadConfigSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let VersionLoadRequestSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let VersionLoadResultSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let VersionedEntityInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WebDeliveryMethodNotificationTemplateSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WhiteLabelingSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WhiteLabelingParamsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WidgetTypeSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WidgetTypeDetailsSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WidgetTypeExportDataSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let WidgetTypeIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WidgetTypeInfoSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WidgetsBundleSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let WidgetsBundleExportDataSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let WidgetsBundleIdSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
declare let X509CertificateChainProvisionConfigurationSchema: z.ZodLazy<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
declare let X509LwM2MBootstrapServerCredentialSchema: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export type X509LwM2MBootstrapServerCredential = z.infer<typeof X509LwM2MBootstrapServerCredentialSchema>;
export { X509LwM2MBootstrapServerCredentialSchema };
export type X509CertificateChainProvisionConfiguration = z.infer<typeof X509CertificateChainProvisionConfigurationSchema>;
export { X509CertificateChainProvisionConfigurationSchema };
export type WidgetsBundleExportData = z.infer<typeof WidgetsBundleExportDataSchema>;
export { WidgetsBundleExportDataSchema };
export type WidgetTypeExportData = z.infer<typeof WidgetTypeExportDataSchema>;
export { WidgetTypeExportDataSchema };
export type WidgetTypeDetails = z.infer<typeof WidgetTypeDetailsSchema>;
export { WidgetTypeDetailsSchema };
export type WidgetType = z.infer<typeof WidgetTypeSchema>;
export { WidgetTypeSchema };
export type WhiteLabelingParams = z.infer<typeof WhiteLabelingParamsSchema>;
export { WhiteLabelingParamsSchema };
export type WebDeliveryMethodNotificationTemplate = z.infer<typeof WebDeliveryMethodNotificationTemplateSchema>;
export { WebDeliveryMethodNotificationTemplateSchema };
export type VersionedEntityInfo = z.infer<typeof VersionedEntityInfoSchema>;
export { VersionedEntityInfoSchema };
export type VersionLoadResult = z.infer<typeof VersionLoadResultSchema>;
export { VersionLoadResultSchema };
export type VersionLoadRequest = z.infer<typeof VersionLoadRequestSchema>;
export { VersionLoadRequestSchema };
export type VersionLoadConfig = z.infer<typeof VersionLoadConfigSchema>;
export { VersionLoadConfigSchema };
export type VersionCreationResult = z.infer<typeof VersionCreationResultSchema>;
export { VersionCreationResultSchema };
export type VersionCreateRequest = z.infer<typeof VersionCreateRequestSchema>;
export { VersionCreateRequestSchema };
export type VersionCreateConfig = z.infer<typeof VersionCreateConfigSchema>;
export { VersionCreateConfigSchema };
export type UsersFilter = z.infer<typeof UsersFilterSchema>;
export { UsersFilterSchema };
export type UserRoleFilter = z.infer<typeof UserRoleFilterSchema>;
export { UserRoleFilterSchema };
export type UserNotificationSettings = z.infer<typeof UserNotificationSettingsSchema>;
export { UserNotificationSettingsSchema };
export type UserListFilter = z.infer<typeof UserListFilterSchema>;
export { UserListFilterSchema };
export type UserGroupListFilter = z.infer<typeof UserGroupListFilterSchema>;
export { UserGroupListFilterSchema };
export type UserDashboardsInfo = z.infer<typeof UserDashboardsInfoSchema>;
export { UserDashboardsInfoSchema };
export type UsageInfo = z.infer<typeof UsageInfoSchema>;
export { UsageInfoSchema };
export type UpdateMessage = z.infer<typeof UpdateMessageSchema>;
export { UpdateMessageSchema };
export type TwoFaProviderInfo = z.infer<typeof TwoFaProviderInfoSchema>;
export { TwoFaProviderInfoSchema };
export type TwoFaAccountConfigUpdateRequest = z.infer<typeof TwoFaAccountConfigUpdateRequestSchema>;
export { TwoFaAccountConfigUpdateRequestSchema };
export type TwilioSmsProviderConfiguration = z.infer<typeof TwilioSmsProviderConfigurationSchema>;
export { TwilioSmsProviderConfigurationSchema };
export type TotpTwoFaProviderConfig = z.infer<typeof TotpTwoFaProviderConfigSchema>;
export { TotpTwoFaProviderConfigSchema };
export type TotpTwoFaAccountConfig = z.infer<typeof TotpTwoFaAccountConfigSchema>;
export { TotpTwoFaAccountConfigSchema };
export type ToServerRpcRequestSnmpCommunicationConfig = z.infer<typeof ToServerRpcRequestSnmpCommunicationConfigSchema>;
export { ToServerRpcRequestSnmpCommunicationConfigSchema };
export type ToDeviceRpcRequestSnmpCommunicationConfig = z.infer<typeof ToDeviceRpcRequestSnmpCommunicationConfigSchema>;
export { ToDeviceRpcRequestSnmpCommunicationConfigSchema };
export type ThingsboardErrorResponse = z.infer<typeof ThingsboardErrorResponseSchema>;
export { ThingsboardErrorResponseSchema };
export type ThingsboardCredentialsExpiredResponse = z.infer<typeof ThingsboardCredentialsExpiredResponseSchema>;
export { ThingsboardCredentialsExpiredResponseSchema };
export type TestSmsRequest = z.infer<typeof TestSmsRequestSchema>;
export { TestSmsRequestSchema };
export type TenantSolutionTemplateInstructions = z.infer<typeof TenantSolutionTemplateInstructionsSchema>;
export { TenantSolutionTemplateInstructionsSchema };
export type TenantSolutionTemplateInfo = z.infer<typeof TenantSolutionTemplateInfoSchema>;
export { TenantSolutionTemplateInfoSchema };
export type TenantSolutionTemplateDetails = z.infer<typeof TenantSolutionTemplateDetailsSchema>;
export { TenantSolutionTemplateDetailsSchema };
export type TenantAdministratorsFilter = z.infer<typeof TenantAdministratorsFilterSchema>;
export { TenantAdministratorsFilterSchema };
export type TelemetryQueryingSnmpCommunicationConfig = z.infer<typeof TelemetryQueryingSnmpCommunicationConfigSchema>;
export { TelemetryQueryingSnmpCommunicationConfigSchema };
export type TelemetryMappingConfiguration = z.infer<typeof TelemetryMappingConfigurationSchema>;
export { TelemetryMappingConfigurationSchema };
export type TbResource = z.infer<typeof TbResourceSchema>;
export { TbResourceSchema };
export type TbImageDeleteResult = z.infer<typeof TbImageDeleteResultSchema>;
export { TbImageDeleteResultSchema };
export type WhiteLabeling = z.infer<typeof WhiteLabelingSchema>;
export { WhiteLabelingSchema };
export type SystemInfo = z.infer<typeof SystemInfoSchema>;
export { SystemInfoSchema };
export type SystemInfoData = z.infer<typeof SystemInfoDataSchema>;
export { SystemInfoDataSchema };
export type SystemAdministratorsFilter = z.infer<typeof SystemAdministratorsFilterSchema>;
export { SystemAdministratorsFilterSchema };
export type StringFilterPredicate = z.infer<typeof StringFilterPredicateSchema>;
export { StringFilterPredicateSchema };
export type StatisticsEventFilter = z.infer<typeof StatisticsEventFilterSchema>;
export { StatisticsEventFilterSchema };
export type StateEntityOwnerFilter = z.infer<typeof StateEntityOwnerFilterSchema>;
export { StateEntityOwnerFilterSchema };
export type StarredDashboardInfo = z.infer<typeof StarredDashboardInfoSchema>;
export { StarredDashboardInfoSchema };
export type SpecificTimeSchedule = z.infer<typeof SpecificTimeScheduleSchema>;
export { SpecificTimeScheduleSchema };
export type SolutionInstallResponse = z.infer<typeof SolutionInstallResponseSchema>;
export { SolutionInstallResponseSchema };
export type SnmpDeviceTransportConfiguration = z.infer<typeof SnmpDeviceTransportConfigurationSchema>;
export { SnmpDeviceTransportConfigurationSchema };
export type SnmpDeviceProfileTransportConfiguration = z.infer<typeof SnmpDeviceProfileTransportConfigurationSchema>;
export { SnmpDeviceProfileTransportConfigurationSchema };
export type SnmpCommunicationConfig = z.infer<typeof SnmpCommunicationConfigSchema>;
export { SnmpCommunicationConfigSchema };
export type SmsTwoFaProviderConfig = z.infer<typeof SmsTwoFaProviderConfigSchema>;
export { SmsTwoFaProviderConfigSchema };
export type SmsTwoFaAccountConfig = z.infer<typeof SmsTwoFaAccountConfigSchema>;
export { SmsTwoFaAccountConfigSchema };
export type SmsProviderConfiguration = z.infer<typeof SmsProviderConfigurationSchema>;
export { SmsProviderConfigurationSchema };
export type SmsDeliveryMethodNotificationTemplate = z.infer<typeof SmsDeliveryMethodNotificationTemplateSchema>;
export { SmsDeliveryMethodNotificationTemplateSchema };
export type SmppSmsProviderConfiguration = z.infer<typeof SmppSmsProviderConfigurationSchema>;
export { SmppSmsProviderConfigurationSchema };
export type SlackNotificationTargetConfig = z.infer<typeof SlackNotificationTargetConfigSchema>;
export { SlackNotificationTargetConfigSchema };
export type SlackNotificationDeliveryMethodConfig = z.infer<typeof SlackNotificationDeliveryMethodConfigSchema>;
export { SlackNotificationDeliveryMethodConfigSchema };
export type SlackDeliveryMethodNotificationTemplate = z.infer<typeof SlackDeliveryMethodNotificationTemplateSchema>;
export { SlackDeliveryMethodNotificationTemplateSchema };
export type SlackConversation = z.infer<typeof SlackConversationSchema>;
export { SlackConversationSchema };
export type SingleEntityVersionLoadRequest = z.infer<typeof SingleEntityVersionLoadRequestSchema>;
export { SingleEntityVersionLoadRequestSchema };
export type SingleEntityVersionCreateRequest = z.infer<typeof SingleEntityVersionCreateRequestSchema>;
export { SingleEntityVersionCreateRequestSchema };
export type SingleEntityFilter = z.infer<typeof SingleEntityFilterSchema>;
export { SingleEntityFilterSchema };
export type SimpleAlarmConditionSpec = z.infer<typeof SimpleAlarmConditionSpecSchema>;
export { SimpleAlarmConditionSpecSchema };
export type SignUpSelfRegistrationParams = z.infer<typeof SignUpSelfRegistrationParamsSchema>;
export { SignUpSelfRegistrationParamsSchema };
export type SignUpRequest = z.infer<typeof SignUpRequestSchema>;
export { SignUpRequestSchema };
export type SharedAttributesSettingSnmpCommunicationConfig = z.infer<typeof SharedAttributesSettingSnmpCommunicationConfigSchema>;
export { SharedAttributesSettingSnmpCommunicationConfigSchema };
export type ShareGroupRequest = z.infer<typeof ShareGroupRequestSchema>;
export { ShareGroupRequestSchema };
export type SelfRegistrationParams = z.infer<typeof SelfRegistrationParamsSchema>;
export { SelfRegistrationParamsSchema };
export type SecuritySettings = z.infer<typeof SecuritySettingsSchema>;
export { SecuritySettingsSchema };
export type UserPasswordPolicy = z.infer<typeof UserPasswordPolicySchema>;
export { UserPasswordPolicySchema };
export type SchedulerEventWithCustomerInfo = z.infer<typeof SchedulerEventWithCustomerInfoSchema>;
export { SchedulerEventWithCustomerInfoSchema };
export type SchedulerEventFilter = z.infer<typeof SchedulerEventFilterSchema>;
export { SchedulerEventFilterSchema };
export type SchedulerEvent = z.infer<typeof SchedulerEventSchema>;
export { SchedulerEventSchema };
export type SaveOtaPackageInfoRequest = z.infer<typeof SaveOtaPackageInfoRequestSchema>;
export { SaveOtaPackageInfoRequestSchema };
export type SaveDeviceWithCredentialsRequest = z.infer<typeof SaveDeviceWithCredentialsRequestSchema>;
export { SaveDeviceWithCredentialsRequestSchema };
export type RuleNodeDebugEventFilter = z.infer<typeof RuleNodeDebugEventFilterSchema>;
export { RuleNodeDebugEventFilterSchema };
export type RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig = z.infer<typeof RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigSchema>;
export { RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigSchema };
export type RuleChainOutputLabelsUsage = z.infer<typeof RuleChainOutputLabelsUsageSchema>;
export { RuleChainOutputLabelsUsageSchema };
export type RuleChainImportResult = z.infer<typeof RuleChainImportResultSchema>;
export { RuleChainImportResultSchema };
export type RuleChainExportData = z.infer<typeof RuleChainExportDataSchema>;
export { RuleChainExportDataSchema };
export type RuleChainDebugEventFilter = z.infer<typeof RuleChainDebugEventFilterSchema>;
export { RuleChainDebugEventFilterSchema };
export type RuleChainData = z.infer<typeof RuleChainDataSchema>;
export { RuleChainDataSchema };
export type RuleChainMetaData = z.infer<typeof RuleChainMetaDataSchema>;
export { RuleChainMetaDataSchema };
export type RuleNode = z.infer<typeof RuleNodeSchema>;
export { RuleNodeSchema };
export type RuleChainConnectionInfo = z.infer<typeof RuleChainConnectionInfoSchema>;
export { RuleChainConnectionInfoSchema };
export type Rpc = z.infer<typeof RpcSchema>;
export { RpcSchema };
export type RpcId = z.infer<typeof RpcIdSchema>;
export { RpcIdSchema };
export type ResponseEntity = z.infer<typeof ResponseEntitySchema>;
export { ResponseEntitySchema };
export type Resource = z.infer<typeof ResourceSchema>;
export { ResourceSchema };
export type ResetPasswordRequest = z.infer<typeof ResetPasswordRequestSchema>;
export { ResetPasswordRequestSchema };
export type ResetPasswordEmailRequest = z.infer<typeof ResetPasswordEmailRequestSchema>;
export { ResetPasswordEmailRequestSchema };
export type RepositorySettingsInfo = z.infer<typeof RepositorySettingsInfoSchema>;
export { RepositorySettingsInfoSchema };
export type RepositorySettings = z.infer<typeof RepositorySettingsSchema>;
export { RepositorySettingsSchema };
export type ReportConfig = z.infer<typeof ReportConfigSchema>;
export { ReportConfigSchema };
export type RepeatingAlarmConditionSpec = z.infer<typeof RepeatingAlarmConditionSpecSchema>;
export { RepeatingAlarmConditionSpecSchema };
export type RelationsQueryFilter = z.infer<typeof RelationsQueryFilterSchema>;
export { RelationsQueryFilterSchema };
export type RawDataEventFilter = z.infer<typeof RawDataEventFilterSchema>;
export { RawDataEventFilterSchema };
export type RateLimitsNotificationRuleTriggerConfig = z.infer<typeof RateLimitsNotificationRuleTriggerConfigSchema>;
export { RateLimitsNotificationRuleTriggerConfigSchema };
export type RPKLwM2MBootstrapServerCredential = z.infer<typeof RPKLwM2MBootstrapServerCredentialSchema>;
export { RPKLwM2MBootstrapServerCredentialSchema };
export type ProtoTransportPayloadConfiguration = z.infer<typeof ProtoTransportPayloadConfigurationSchema>;
export { ProtoTransportPayloadConfigurationSchema };
export type PowerSavingConfiguration = z.infer<typeof PowerSavingConfigurationSchema>;
export { PowerSavingConfigurationSchema };
export type PlatformUsersNotificationTargetConfig = z.infer<typeof PlatformUsersNotificationTargetConfigSchema>;
export { PlatformUsersNotificationTargetConfigSchema };
export type PlatformTwoFaSettings = z.infer<typeof PlatformTwoFaSettingsSchema>;
export { PlatformTwoFaSettingsSchema };
export type TwoFaProviderConfig = z.infer<typeof TwoFaProviderConfigSchema>;
export { TwoFaProviderConfigSchema };
export type PageData_Of_WidgetsBundle = z.infer<typeof PageData_Of_WidgetsBundleSchema>;
export { PageData_Of_WidgetsBundleSchema };
export type WidgetsBundle = z.infer<typeof WidgetsBundleSchema>;
export { WidgetsBundleSchema };
export type WidgetsBundleId = z.infer<typeof WidgetsBundleIdSchema>;
export { WidgetsBundleIdSchema };
export type PageData_Of_WidgetTypeInfo = z.infer<typeof PageData_Of_WidgetTypeInfoSchema>;
export { PageData_Of_WidgetTypeInfoSchema };
export type WidgetTypeInfo = z.infer<typeof WidgetTypeInfoSchema>;
export { WidgetTypeInfoSchema };
export type WidgetTypeId = z.infer<typeof WidgetTypeIdSchema>;
export { WidgetTypeIdSchema };
export type PageData_Of_User = z.infer<typeof PageData_Of_UserSchema>;
export { PageData_Of_UserSchema };
export type User = z.infer<typeof UserSchema>;
export { UserSchema };
export type PageData_Of_UserInfo = z.infer<typeof PageData_Of_UserInfoSchema>;
export { PageData_Of_UserInfoSchema };
export type UserInfo = z.infer<typeof UserInfoSchema>;
export { UserInfoSchema };
export type PageData_Of_UserEmailInfo = z.infer<typeof PageData_Of_UserEmailInfoSchema>;
export { PageData_Of_UserEmailInfoSchema };
export type UserEmailInfo = z.infer<typeof UserEmailInfoSchema>;
export { UserEmailInfoSchema };
export type PageData_Of_Tenant = z.infer<typeof PageData_Of_TenantSchema>;
export { PageData_Of_TenantSchema };
export type Tenant = z.infer<typeof TenantSchema>;
export { TenantSchema };
export type PageData_Of_TenantProfile = z.infer<typeof PageData_Of_TenantProfileSchema>;
export { PageData_Of_TenantProfileSchema };
export type TenantProfile = z.infer<typeof TenantProfileSchema>;
export { TenantProfileSchema };
export type TenantProfileData = z.infer<typeof TenantProfileDataSchema>;
export { TenantProfileDataSchema };
export type TenantProfileQueueConfiguration = z.infer<typeof TenantProfileQueueConfigurationSchema>;
export { TenantProfileQueueConfigurationSchema };
export type TenantProfileConfiguration = z.infer<typeof TenantProfileConfigurationSchema>;
export { TenantProfileConfigurationSchema };
export type PageData_Of_TenantInfo = z.infer<typeof PageData_Of_TenantInfoSchema>;
export { PageData_Of_TenantInfoSchema };
export type TenantInfo = z.infer<typeof TenantInfoSchema>;
export { TenantInfoSchema };
export type TenantProfileId = z.infer<typeof TenantProfileIdSchema>;
export { TenantProfileIdSchema };
export type PageData_Of_TbResourceInfo = z.infer<typeof PageData_Of_TbResourceInfoSchema>;
export { PageData_Of_TbResourceInfoSchema };
export type TbResourceInfo = z.infer<typeof TbResourceInfoSchema>;
export { TbResourceInfoSchema };
export type TbResourceId = z.infer<typeof TbResourceIdSchema>;
export { TbResourceIdSchema };
export type PageData_Of_ShortEntityView = z.infer<typeof PageData_Of_ShortEntityViewSchema>;
export { PageData_Of_ShortEntityViewSchema };
export type ShortEntityView = z.infer<typeof ShortEntityViewSchema>;
export { ShortEntityViewSchema };
export type PageData_Of_SchedulerEventInfo = z.infer<typeof PageData_Of_SchedulerEventInfoSchema>;
export { PageData_Of_SchedulerEventInfoSchema };
export type SchedulerEventInfo = z.infer<typeof SchedulerEventInfoSchema>;
export { SchedulerEventInfoSchema };
export type SchedulerEventId = z.infer<typeof SchedulerEventIdSchema>;
export { SchedulerEventIdSchema };
export type PageData_Of_RuleChain = z.infer<typeof PageData_Of_RuleChainSchema>;
export { PageData_Of_RuleChainSchema };
export type RuleChain = z.infer<typeof RuleChainSchema>;
export { RuleChainSchema };
export type RuleNodeId = z.infer<typeof RuleNodeIdSchema>;
export { RuleNodeIdSchema };
export type PageData_Of_Role = z.infer<typeof PageData_Of_RoleSchema>;
export { PageData_Of_RoleSchema };
export type PageData_Of_Queue = z.infer<typeof PageData_Of_QueueSchema>;
export { PageData_Of_QueueSchema };
export type Queue = z.infer<typeof QueueSchema>;
export { QueueSchema };
export type SubmitStrategy = z.infer<typeof SubmitStrategySchema>;
export { SubmitStrategySchema };
export type ProcessingStrategy = z.infer<typeof ProcessingStrategySchema>;
export { ProcessingStrategySchema };
export type QueueId = z.infer<typeof QueueIdSchema>;
export { QueueIdSchema };
export type PageData_Of_OtaPackageInfo = z.infer<typeof PageData_Of_OtaPackageInfoSchema>;
export { PageData_Of_OtaPackageInfoSchema };
export type PageData_Of_Notification = z.infer<typeof PageData_Of_NotificationSchema>;
export { PageData_Of_NotificationSchema };
export type PageData_Of_NotificationTemplate = z.infer<typeof PageData_Of_NotificationTemplateSchema>;
export { PageData_Of_NotificationTemplateSchema };
export type PageData_Of_NotificationTarget = z.infer<typeof PageData_Of_NotificationTargetSchema>;
export { PageData_Of_NotificationTargetSchema };
export type PageData_Of_NotificationRuleInfo = z.infer<typeof PageData_Of_NotificationRuleInfoSchema>;
export { PageData_Of_NotificationRuleInfoSchema };
export type PageData_Of_NotificationRequestInfo = z.infer<typeof PageData_Of_NotificationRequestInfoSchema>;
export { PageData_Of_NotificationRequestInfoSchema };
export type PageData_Of_Integration = z.infer<typeof PageData_Of_IntegrationSchema>;
export { PageData_Of_IntegrationSchema };
export type PageData_Of_IntegrationInfo = z.infer<typeof PageData_Of_IntegrationInfoSchema>;
export { PageData_Of_IntegrationInfoSchema };
export type PageData_Of_EventInfo = z.infer<typeof PageData_Of_EventInfoSchema>;
export { PageData_Of_EventInfoSchema };
export type PageData_Of_EntityView = z.infer<typeof PageData_Of_EntityViewSchema>;
export { PageData_Of_EntityViewSchema };
export type PageData_Of_EntityViewInfo = z.infer<typeof PageData_Of_EntityViewInfoSchema>;
export { PageData_Of_EntityViewInfoSchema };
export type PageData_Of_EntityVersion = z.infer<typeof PageData_Of_EntityVersionSchema>;
export { PageData_Of_EntityVersionSchema };
export type PageData_Of_EntitySubtype = z.infer<typeof PageData_Of_EntitySubtypeSchema>;
export { PageData_Of_EntitySubtypeSchema };
export type PageData_Of_EntityInfo = z.infer<typeof PageData_Of_EntityInfoSchema>;
export { PageData_Of_EntityInfoSchema };
export type PageData_Of_EntityGroupInfo = z.infer<typeof PageData_Of_EntityGroupInfoSchema>;
export { PageData_Of_EntityGroupInfoSchema };
export type PageData_Of_EntityData = z.infer<typeof PageData_Of_EntityDataSchema>;
export { PageData_Of_EntityDataSchema };
export type PageData_Of_Edge = z.infer<typeof PageData_Of_EdgeSchema>;
export { PageData_Of_EdgeSchema };
export type PageData_Of_EdgeInfo = z.infer<typeof PageData_Of_EdgeInfoSchema>;
export { PageData_Of_EdgeInfoSchema };
export type PageData_Of_EdgeEvent = z.infer<typeof PageData_Of_EdgeEventSchema>;
export { PageData_Of_EdgeEventSchema };
export type PageData_Of_Device = z.infer<typeof PageData_Of_DeviceSchema>;
export { PageData_Of_DeviceSchema };
export type PageData_Of_DeviceProfile = z.infer<typeof PageData_Of_DeviceProfileSchema>;
export { PageData_Of_DeviceProfileSchema };
export type PageData_Of_DeviceProfileInfo = z.infer<typeof PageData_Of_DeviceProfileInfoSchema>;
export { PageData_Of_DeviceProfileInfoSchema };
export type PageData_Of_DeviceInfo = z.infer<typeof PageData_Of_DeviceInfoSchema>;
export { PageData_Of_DeviceInfoSchema };
export type PageData_Of_DashboardInfo = z.infer<typeof PageData_Of_DashboardInfoSchema>;
export { PageData_Of_DashboardInfoSchema };
export type PageData_Of_Customer = z.infer<typeof PageData_Of_CustomerSchema>;
export { PageData_Of_CustomerSchema };
export type PageData_Of_CustomerInfo = z.infer<typeof PageData_Of_CustomerInfoSchema>;
export { PageData_Of_CustomerInfoSchema };
export type PageData_Of_Converter = z.infer<typeof PageData_Of_ConverterSchema>;
export { PageData_Of_ConverterSchema };
export type PageData_Of_ContactBased_Of_object = z.infer<typeof PageData_Of_ContactBased_Of_objectSchema>;
export { PageData_Of_ContactBased_Of_objectSchema };
export type PageData_Of_BlobEntityWithCustomerInfo = z.infer<typeof PageData_Of_BlobEntityWithCustomerInfoSchema>;
export { PageData_Of_BlobEntityWithCustomerInfoSchema };
export type PageData_Of_AuditLog = z.infer<typeof PageData_Of_AuditLogSchema>;
export { PageData_Of_AuditLogSchema };
export type PageData_Of_Asset = z.infer<typeof PageData_Of_AssetSchema>;
export { PageData_Of_AssetSchema };
export type PageData_Of_AssetProfile = z.infer<typeof PageData_Of_AssetProfileSchema>;
export { PageData_Of_AssetProfileSchema };
export type PageData_Of_AssetProfileInfo = z.infer<typeof PageData_Of_AssetProfileInfoSchema>;
export { PageData_Of_AssetProfileInfoSchema };
export type PageData_Of_AssetInfo = z.infer<typeof PageData_Of_AssetInfoSchema>;
export { PageData_Of_AssetInfoSchema };
export type PageData_Of_AlarmInfo = z.infer<typeof PageData_Of_AlarmInfoSchema>;
export { PageData_Of_AlarmInfoSchema };
export type PageData_Of_AlarmData = z.infer<typeof PageData_Of_AlarmDataSchema>;
export { PageData_Of_AlarmDataSchema };
export type PageData_Of_AlarmCommentInfo = z.infer<typeof PageData_Of_AlarmCommentInfoSchema>;
export { PageData_Of_AlarmCommentInfoSchema };
export type PSKLwM2MBootstrapServerCredential = z.infer<typeof PSKLwM2MBootstrapServerCredentialSchema>;
export { PSKLwM2MBootstrapServerCredentialSchema };
export type OtherConfiguration = z.infer<typeof OtherConfigurationSchema>;
export { OtherConfigurationSchema };
export type OtaPackageInfo = z.infer<typeof OtaPackageInfoSchema>;
export { OtaPackageInfoSchema };
export type OtaPackage = z.infer<typeof OtaPackageSchema>;
export { OtaPackageSchema };
export type OriginatorEntityOwnerUsersFilter = z.infer<typeof OriginatorEntityOwnerUsersFilterSchema>;
export { OriginatorEntityOwnerUsersFilterSchema };
export type ObjectAttributes = z.infer<typeof ObjectAttributesSchema>;
export { ObjectAttributesSchema };
export type OAuth2Info = z.infer<typeof OAuth2InfoSchema>;
export { OAuth2InfoSchema };
export type OAuth2ParamsInfo = z.infer<typeof OAuth2ParamsInfoSchema>;
export { OAuth2ParamsInfoSchema };
export type OAuth2MobileInfo = z.infer<typeof OAuth2MobileInfoSchema>;
export { OAuth2MobileInfoSchema };
export type OAuth2RegistrationInfo = z.infer<typeof OAuth2RegistrationInfoSchema>;
export { OAuth2RegistrationInfoSchema };
export type OAuth2DomainInfo = z.infer<typeof OAuth2DomainInfoSchema>;
export { OAuth2DomainInfoSchema };
export type OAuth2ClientRegistrationTemplate = z.infer<typeof OAuth2ClientRegistrationTemplateSchema>;
export { OAuth2ClientRegistrationTemplateSchema };
export type OAuth2MapperConfig = z.infer<typeof OAuth2MapperConfigSchema>;
export { OAuth2MapperConfigSchema };
export type OAuth2CustomMapperConfig = z.infer<typeof OAuth2CustomMapperConfigSchema>;
export { OAuth2CustomMapperConfigSchema };
export type OAuth2ClientRegistrationTemplateId = z.infer<typeof OAuth2ClientRegistrationTemplateIdSchema>;
export { OAuth2ClientRegistrationTemplateIdSchema };
export type OAuth2ClientInfo = z.infer<typeof OAuth2ClientInfoSchema>;
export { OAuth2ClientInfoSchema };
export type OAuth2BasicMapperConfig = z.infer<typeof OAuth2BasicMapperConfigSchema>;
export { OAuth2BasicMapperConfigSchema };
export type NumericFilterPredicate = z.infer<typeof NumericFilterPredicateSchema>;
export { NumericFilterPredicateSchema };
export type NotificationTarget = z.infer<typeof NotificationTargetSchema>;
export { NotificationTargetSchema };
export type NotificationTargetConfig = z.infer<typeof NotificationTargetConfigSchema>;
export { NotificationTargetConfigSchema };
export type NotificationSettings = z.infer<typeof NotificationSettingsSchema>;
export { NotificationSettingsSchema };
export type NotificationRuleInfo = z.infer<typeof NotificationRuleInfoSchema>;
export { NotificationRuleInfoSchema };
export type NotificationRule = z.infer<typeof NotificationRuleSchema>;
export { NotificationRuleSchema };
export type NotificationRuleTriggerConfig = z.infer<typeof NotificationRuleTriggerConfigSchema>;
export { NotificationRuleTriggerConfigSchema };
export type NotificationRuleRecipientsConfig = z.infer<typeof NotificationRuleRecipientsConfigSchema>;
export { NotificationRuleRecipientsConfigSchema };
export type NotificationRuleConfig = z.infer<typeof NotificationRuleConfigSchema>;
export { NotificationRuleConfigSchema };
export type NotificationRequestPreview = z.infer<typeof NotificationRequestPreviewSchema>;
export { NotificationRequestPreviewSchema };
export type NotificationRequestInfo = z.infer<typeof NotificationRequestInfoSchema>;
export { NotificationRequestInfoSchema };
export type NotificationRequest = z.infer<typeof NotificationRequestSchema>;
export { NotificationRequestSchema };
export type NotificationTemplateId = z.infer<typeof NotificationTemplateIdSchema>;
export { NotificationTemplateIdSchema };
export type NotificationTemplate = z.infer<typeof NotificationTemplateSchema>;
export { NotificationTemplateSchema };
export type NotificationTemplateConfig = z.infer<typeof NotificationTemplateConfigSchema>;
export { NotificationTemplateConfigSchema };
export type NotificationRequestStats = z.infer<typeof NotificationRequestStatsSchema>;
export { NotificationRequestStatsSchema };
export type NotificationRuleId = z.infer<typeof NotificationRuleIdSchema>;
export { NotificationRuleIdSchema };
export type NotificationRequestConfig = z.infer<typeof NotificationRequestConfigSchema>;
export { NotificationRequestConfigSchema };
export type NotificationPref = z.infer<typeof NotificationPrefSchema>;
export { NotificationPrefSchema };
export type NotificationDeliveryMethodConfig = z.infer<typeof NotificationDeliveryMethodConfigSchema>;
export { NotificationDeliveryMethodConfigSchema };
export type Notification = z.infer<typeof NotificationSchema>;
export { NotificationSchema };
export type NotificationRequestId = z.infer<typeof NotificationRequestIdSchema>;
export { NotificationRequestIdSchema };
export type NotificationInfo = z.infer<typeof NotificationInfoSchema>;
export { NotificationInfoSchema };
export type NotificationId = z.infer<typeof NotificationIdSchema>;
export { NotificationIdSchema };
export type NodeConnectionInfo = z.infer<typeof NodeConnectionInfoSchema>;
export { NodeConnectionInfoSchema };
export type NoSecLwM2MBootstrapServerCredential = z.infer<typeof NoSecLwM2MBootstrapServerCredentialSchema>;
export { NoSecLwM2MBootstrapServerCredentialSchema };
export type NewPlatformVersionNotificationRuleTriggerConfig = z.infer<typeof NewPlatformVersionNotificationRuleTriggerConfigSchema>;
export { NewPlatformVersionNotificationRuleTriggerConfigSchema };
export type MqttDeviceTransportConfiguration = z.infer<typeof MqttDeviceTransportConfigurationSchema>;
export { MqttDeviceTransportConfigurationSchema };
export type MqttDeviceProfileTransportConfiguration = z.infer<typeof MqttDeviceProfileTransportConfigurationSchema>;
export { MqttDeviceProfileTransportConfigurationSchema };
export type TransportPayloadTypeConfiguration = z.infer<typeof TransportPayloadTypeConfigurationSchema>;
export { TransportPayloadTypeConfigurationSchema };
export type MicrosoftTeamsNotificationTargetConfig = z.infer<typeof MicrosoftTeamsNotificationTargetConfigSchema>;
export { MicrosoftTeamsNotificationTargetConfigSchema };
export type MicrosoftTeamsDeliveryMethodNotificationTemplate = z.infer<typeof MicrosoftTeamsDeliveryMethodNotificationTemplateSchema>;
export { MicrosoftTeamsDeliveryMethodNotificationTemplateSchema };
export type Lwm2mDeviceTransportConfiguration = z.infer<typeof Lwm2mDeviceTransportConfigurationSchema>;
export { Lwm2mDeviceTransportConfigurationSchema };
export type Lwm2mDeviceProfileTransportConfiguration = z.infer<typeof Lwm2mDeviceProfileTransportConfigurationSchema>;
export { Lwm2mDeviceProfileTransportConfigurationSchema };
export type LwM2mObject = z.infer<typeof LwM2mObjectSchema>;
export { LwM2mObjectSchema };
export type LwM2mInstance = z.infer<typeof LwM2mInstanceSchema>;
export { LwM2mInstanceSchema };
export type LwM2mResourceObserve = z.infer<typeof LwM2mResourceObserveSchema>;
export { LwM2mResourceObserveSchema };
export type LwM2MBootstrapServerCredential = z.infer<typeof LwM2MBootstrapServerCredentialSchema>;
export { LwM2MBootstrapServerCredentialSchema };
export type LoginWhiteLabelingParams = z.infer<typeof LoginWhiteLabelingParamsSchema>;
export { LoginWhiteLabelingParamsSchema };
export type PaletteSettings = z.infer<typeof PaletteSettingsSchema>;
export { PaletteSettingsSchema };
export type Palette = z.infer<typeof PaletteSchema>;
export { PaletteSchema };
export type LoginResponse = z.infer<typeof LoginResponseSchema>;
export { LoginResponseSchema };
export type LoginRequest = z.infer<typeof LoginRequestSchema>;
export { LoginRequestSchema };
export type LifeCycleEventFilter = z.infer<typeof LifeCycleEventFilterSchema>;
export { LifeCycleEventFilterSchema };
export type LicenseUsageInfo = z.infer<typeof LicenseUsageInfoSchema>;
export { LicenseUsageInfoSchema };
export type LastVisitedDashboardInfo = z.infer<typeof LastVisitedDashboardInfoSchema>;
export { LastVisitedDashboardInfoSchema };
export type JsonTransportPayloadConfiguration = z.infer<typeof JsonTransportPayloadConfigurationSchema>;
export { JsonTransportPayloadConfigurationSchema };
export type JWT_Settings = z.infer<typeof JWT_SettingsSchema>;
export { JWT_SettingsSchema };
export type JWT_Pair = z.infer<typeof JWT_PairSchema>;
export { JWT_PairSchema };
export type IntegrationLifecycleEventNotificationRuleTriggerConfig = z.infer<typeof IntegrationLifecycleEventNotificationRuleTriggerConfigSchema>;
export { IntegrationLifecycleEventNotificationRuleTriggerConfigSchema };
export type IntegrationInfo = z.infer<typeof IntegrationInfoSchema>;
export { IntegrationInfoSchema };
export type ObjectNode = z.infer<typeof ObjectNodeSchema>;
export { ObjectNodeSchema };
export type Integration = z.infer<typeof IntegrationSchema>;
export { IntegrationSchema };
export type IntegrationId = z.infer<typeof IntegrationIdSchema>;
export { IntegrationIdSchema };
export type ImageExportData = z.infer<typeof ImageExportDataSchema>;
export { ImageExportDataSchema };
export type HomeDashboardInfo = z.infer<typeof HomeDashboardInfoSchema>;
export { HomeDashboardInfoSchema };
export type HomeDashboard = z.infer<typeof HomeDashboardSchema>;
export { HomeDashboardSchema };
export type HasId_Of_object = z.infer<typeof HasId_Of_objectSchema>;
export { HasId_Of_objectSchema };
export type GroupPermissionInfo = z.infer<typeof GroupPermissionInfoSchema>;
export { GroupPermissionInfoSchema };
export type Role = z.infer<typeof RoleSchema>;
export { RoleSchema };
export type GroupPermission = z.infer<typeof GroupPermissionSchema>;
export { GroupPermissionSchema };
export type RoleId = z.infer<typeof RoleIdSchema>;
export { RoleIdSchema };
export type GroupPermissionId = z.infer<typeof GroupPermissionIdSchema>;
export { GroupPermissionIdSchema };
export type GroupEntityExportData = z.infer<typeof GroupEntityExportDataSchema>;
export { GroupEntityExportDataSchema };
export type FilterPredicateValue_Of_string = z.infer<typeof FilterPredicateValue_Of_stringSchema>;
export { FilterPredicateValue_Of_stringSchema };
export type FilterPredicateValue_Of_long = z.infer<typeof FilterPredicateValue_Of_longSchema>;
export { FilterPredicateValue_Of_longSchema };
export type FilterPredicateValue_Of_int = z.infer<typeof FilterPredicateValue_Of_intSchema>;
export { FilterPredicateValue_Of_intSchema };
export type FilterPredicateValue_Of_double = z.infer<typeof FilterPredicateValue_Of_doubleSchema>;
export { FilterPredicateValue_Of_doubleSchema };
export type FilterPredicateValue_Of_boolean = z.infer<typeof FilterPredicateValue_Of_booleanSchema>;
export { FilterPredicateValue_Of_booleanSchema };
export type FeaturesInfo = z.infer<typeof FeaturesInfoSchema>;
export { FeaturesInfoSchema };
export type Favicon = z.infer<typeof FaviconSchema>;
export { FaviconSchema };
export type ExportableEntity_Of_EntityId = z.infer<typeof ExportableEntity_Of_EntityIdSchema>;
export { ExportableEntity_Of_EntityIdSchema };
export type EventInfo = z.infer<typeof EventInfoSchema>;
export { EventInfoSchema };
export type EventId = z.infer<typeof EventIdSchema>;
export { EventIdSchema };
export type EventFilter = z.infer<typeof EventFilterSchema>;
export { EventFilterSchema };
export type EscalatedNotificationRuleRecipientsConfig = z.infer<typeof EscalatedNotificationRuleRecipientsConfigSchema>;
export { EscalatedNotificationRuleRecipientsConfigSchema };
export type ErrorEventFilter = z.infer<typeof ErrorEventFilterSchema>;
export { ErrorEventFilterSchema };
export type EntityViewTypeFilter = z.infer<typeof EntityViewTypeFilterSchema>;
export { EntityViewTypeFilterSchema };
export type EntityViewSearchQueryFilter = z.infer<typeof EntityViewSearchQueryFilterSchema>;
export { EntityViewSearchQueryFilterSchema };
export type EntityViewSearchQuery = z.infer<typeof EntityViewSearchQuerySchema>;
export { EntityViewSearchQuerySchema };
export type EntityViewInfo = z.infer<typeof EntityViewInfoSchema>;
export { EntityViewInfoSchema };
export type EntityView = z.infer<typeof EntityViewSchema>;
export { EntityViewSchema };
export type TelemetryEntityView = z.infer<typeof TelemetryEntityViewSchema>;
export { TelemetryEntityViewSchema };
export type EntityViewId = z.infer<typeof EntityViewIdSchema>;
export { EntityViewIdSchema };
export type EntityVersion = z.infer<typeof EntityVersionSchema>;
export { EntityVersionSchema };
export type EntityTypeVersionLoadRequest = z.infer<typeof EntityTypeVersionLoadRequestSchema>;
export { EntityTypeVersionLoadRequestSchema };
export type EntityTypeVersionLoadConfig = z.infer<typeof EntityTypeVersionLoadConfigSchema>;
export { EntityTypeVersionLoadConfigSchema };
export type EntityTypeVersionCreateConfig = z.infer<typeof EntityTypeVersionCreateConfigSchema>;
export { EntityTypeVersionCreateConfigSchema };
export type EntityTypeLoadResult = z.infer<typeof EntityTypeLoadResultSchema>;
export { EntityTypeLoadResultSchema };
export type EntityTypeFilter = z.infer<typeof EntityTypeFilterSchema>;
export { EntityTypeFilterSchema };
export type EntitySubtype = z.infer<typeof EntitySubtypeSchema>;
export { EntitySubtypeSchema };
export type EntityRelationsQuery = z.infer<typeof EntityRelationsQuerySchema>;
export { EntityRelationsQuerySchema };
export type RelationEntityTypeFilter = z.infer<typeof RelationEntityTypeFilterSchema>;
export { RelationEntityTypeFilterSchema };
export type EntityRelationInfo = z.infer<typeof EntityRelationInfoSchema>;
export { EntityRelationInfoSchema };
export type EntityNameFilter = z.infer<typeof EntityNameFilterSchema>;
export { EntityNameFilterSchema };
export type EntityLoadError = z.infer<typeof EntityLoadErrorSchema>;
export { EntityLoadErrorSchema };
export type EntityListFilter = z.infer<typeof EntityListFilterSchema>;
export { EntityListFilterSchema };
export type EntityGroupNameFilter = z.infer<typeof EntityGroupNameFilterSchema>;
export { EntityGroupNameFilterSchema };
export type EntityGroupListFilter = z.infer<typeof EntityGroupListFilterSchema>;
export { EntityGroupListFilterSchema };
export type EntityGroupInfo = z.infer<typeof EntityGroupInfoSchema>;
export { EntityGroupInfoSchema };
export type EntityGroupFilter = z.infer<typeof EntityGroupFilterSchema>;
export { EntityGroupFilterSchema };
export type EntityGroupExportData = z.infer<typeof EntityGroupExportDataSchema>;
export { EntityGroupExportDataSchema };
export type EntityGroup = z.infer<typeof EntityGroupSchema>;
export { EntityGroupSchema };
export type EntityDataQuery = z.infer<typeof EntityDataQuerySchema>;
export { EntityDataQuerySchema };
export type EntityDataPageLink = z.infer<typeof EntityDataPageLinkSchema>;
export { EntityDataPageLinkSchema };
export type EntityDataInfo = z.infer<typeof EntityDataInfoSchema>;
export { EntityDataInfoSchema };
export type EntityDataDiff = z.infer<typeof EntityDataDiffSchema>;
export { EntityDataDiffSchema };
export type EntityExportData_Of_object = z.infer<typeof EntityExportData_Of_objectSchema>;
export { EntityExportData_Of_objectSchema };
export type EntityRelation = z.infer<typeof EntityRelationSchema>;
export { EntityRelationSchema };
export type EntityData = z.infer<typeof EntityDataSchema>;
export { EntityDataSchema };
export type EntityCountQuery = z.infer<typeof EntityCountQuerySchema>;
export { EntityCountQuerySchema };
export type EntityActionNotificationRuleTriggerConfig = z.infer<typeof EntityActionNotificationRuleTriggerConfigSchema>;
export { EntityActionNotificationRuleTriggerConfigSchema };
export type EntitiesLimitNotificationRuleTriggerConfig = z.infer<typeof EntitiesLimitNotificationRuleTriggerConfigSchema>;
export { EntitiesLimitNotificationRuleTriggerConfigSchema };
export type EntitiesByGroupNameFilter = z.infer<typeof EntitiesByGroupNameFilterSchema>;
export { EntitiesByGroupNameFilterSchema };
export type EmailTwoFaProviderConfig = z.infer<typeof EmailTwoFaProviderConfigSchema>;
export { EmailTwoFaProviderConfigSchema };
export type EmailTwoFaAccountConfig = z.infer<typeof EmailTwoFaAccountConfigSchema>;
export { EmailTwoFaAccountConfigSchema };
export type EmailDeliveryMethodNotificationTemplate = z.infer<typeof EmailDeliveryMethodNotificationTemplateSchema>;
export { EmailDeliveryMethodNotificationTemplateSchema };
export type EfentoCoapDeviceTypeConfiguration = z.infer<typeof EfentoCoapDeviceTypeConfigurationSchema>;
export { EfentoCoapDeviceTypeConfigurationSchema };
export type EdgeTypeFilter = z.infer<typeof EdgeTypeFilterSchema>;
export { EdgeTypeFilterSchema };
export type EdgeSearchQueryFilter = z.infer<typeof EdgeSearchQueryFilterSchema>;
export { EdgeSearchQueryFilterSchema };
export type EdgeSearchQuery = z.infer<typeof EdgeSearchQuerySchema>;
export { EdgeSearchQuerySchema };
export type EdgeInstructions = z.infer<typeof EdgeInstructionsSchema>;
export { EdgeInstructionsSchema };
export type EdgeInfo = z.infer<typeof EdgeInfoSchema>;
export { EdgeInfoSchema };
export type EdgeEvent = z.infer<typeof EdgeEventSchema>;
export { EdgeEventSchema };
export type EdgeEventId = z.infer<typeof EdgeEventIdSchema>;
export { EdgeEventIdSchema };
export type Edge = z.infer<typeof EdgeSchema>;
export { EdgeSchema };
export type EdgeId = z.infer<typeof EdgeIdSchema>;
export { EdgeIdSchema };
export type DynamicValue_Of_long = z.infer<typeof DynamicValue_Of_longSchema>;
export { DynamicValue_Of_longSchema };
export type DynamicValue_Of_int = z.infer<typeof DynamicValue_Of_intSchema>;
export { DynamicValue_Of_intSchema };
export type DynamicValue_Of_double = z.infer<typeof DynamicValue_Of_doubleSchema>;
export { DynamicValue_Of_doubleSchema };
export type DynamicValue_Of_boolean = z.infer<typeof DynamicValue_Of_booleanSchema>;
export { DynamicValue_Of_booleanSchema };
export type DurationAlarmConditionSpec = z.infer<typeof DurationAlarmConditionSpecSchema>;
export { DurationAlarmConditionSpecSchema };
export type DisabledDeviceProfileProvisionConfiguration = z.infer<typeof DisabledDeviceProfileProvisionConfigurationSchema>;
export { DisabledDeviceProfileProvisionConfigurationSchema };
export type DeviceTypeFilter = z.infer<typeof DeviceTypeFilterSchema>;
export { DeviceTypeFilterSchema };
export type DeviceSearchQueryFilter = z.infer<typeof DeviceSearchQueryFilterSchema>;
export { DeviceSearchQueryFilterSchema };
export type DeviceSearchQuery = z.infer<typeof DeviceSearchQuerySchema>;
export { DeviceSearchQuerySchema };
export type DeviceProfileInfo = z.infer<typeof DeviceProfileInfoSchema>;
export { DeviceProfileInfoSchema };
export type DeviceProfile = z.infer<typeof DeviceProfileSchema>;
export { DeviceProfileSchema };
export type DeviceProfileData = z.infer<typeof DeviceProfileDataSchema>;
export { DeviceProfileDataSchema };
export type DeviceProfileAlarm = z.infer<typeof DeviceProfileAlarmSchema>;
export { DeviceProfileAlarmSchema };
export type DeviceProfileProvisionConfiguration = z.infer<typeof DeviceProfileProvisionConfigurationSchema>;
export { DeviceProfileProvisionConfigurationSchema };
export type DeviceProfileTransportConfiguration = z.infer<typeof DeviceProfileTransportConfigurationSchema>;
export { DeviceProfileTransportConfigurationSchema };
export type DeviceProfileConfiguration = z.infer<typeof DeviceProfileConfigurationSchema>;
export { DeviceProfileConfigurationSchema };
export type DeviceInfo = z.infer<typeof DeviceInfoSchema>;
export { DeviceInfoSchema };
export type DeviceGroupOtaPackage = z.infer<typeof DeviceGroupOtaPackageSchema>;
export { DeviceGroupOtaPackageSchema };
export type DeviceExportData = z.infer<typeof DeviceExportDataSchema>;
export { DeviceExportDataSchema };
export type DeviceCredentials = z.infer<typeof DeviceCredentialsSchema>;
export { DeviceCredentialsSchema };
export type DeviceCredentialsId = z.infer<typeof DeviceCredentialsIdSchema>;
export { DeviceCredentialsIdSchema };
export type DeviceActivityNotificationRuleTriggerConfig = z.infer<typeof DeviceActivityNotificationRuleTriggerConfigSchema>;
export { DeviceActivityNotificationRuleTriggerConfigSchema };
export type Device = z.infer<typeof DeviceSchema>;
export { DeviceSchema };
export type OtaPackageId = z.infer<typeof OtaPackageIdSchema>;
export { OtaPackageIdSchema };
export type DeviceData = z.infer<typeof DeviceDataSchema>;
export { DeviceDataSchema };
export type DeviceTransportConfiguration = z.infer<typeof DeviceTransportConfigurationSchema>;
export { DeviceTransportConfigurationSchema };
export type DeviceConfiguration = z.infer<typeof DeviceConfigurationSchema>;
export { DeviceConfigurationSchema };
export type DeviceProfileId = z.infer<typeof DeviceProfileIdSchema>;
export { DeviceProfileIdSchema };
export type DeviceId = z.infer<typeof DeviceIdSchema>;
export { DeviceIdSchema };
export type DeliveryMethodNotificationTemplate = z.infer<typeof DeliveryMethodNotificationTemplateSchema>;
export { DeliveryMethodNotificationTemplateSchema };
export type DeferredResult_Of_uuid = z.infer<typeof DeferredResult_Of_uuidSchema>;
export { DeferredResult_Of_uuidSchema };
export type DeferredResult_Of_Void = z.infer<typeof DeferredResult_Of_VoidSchema>;
export { DeferredResult_Of_VoidSchema };
export type DeferredResult_Of_ResponseEntity = z.infer<typeof DeferredResult_Of_ResponseEntitySchema>;
export { DeferredResult_Of_ResponseEntitySchema };
export type DeferredResult_Of_RepositorySettings = z.infer<typeof DeferredResult_Of_RepositorySettingsSchema>;
export { DeferredResult_Of_RepositorySettingsSchema };
export type DeferredResult_Of_PageData_Of_EntityVersion = z.infer<typeof DeferredResult_Of_PageData_Of_EntityVersionSchema>;
export { DeferredResult_Of_PageData_Of_EntityVersionSchema };
export type DeferredResult_Of_List_Of_VersionedEntityInfo = z.infer<typeof DeferredResult_Of_List_Of_VersionedEntityInfoSchema>;
export { DeferredResult_Of_List_Of_VersionedEntityInfoSchema };
export type DeferredResult_Of_List_Of_BranchInfo = z.infer<typeof DeferredResult_Of_List_Of_BranchInfoSchema>;
export { DeferredResult_Of_List_Of_BranchInfoSchema };
export type DeferredResult_Of_EntityDataInfo = z.infer<typeof DeferredResult_Of_EntityDataInfoSchema>;
export { DeferredResult_Of_EntityDataInfoSchema };
export type DeferredResult_Of_EntityDataDiff = z.infer<typeof DeferredResult_Of_EntityDataDiffSchema>;
export { DeferredResult_Of_EntityDataDiffSchema };
export type DefaultTenantProfileConfiguration = z.infer<typeof DefaultTenantProfileConfigurationSchema>;
export { DefaultTenantProfileConfigurationSchema };
export type DefaultRuleChainCreateRequest = z.infer<typeof DefaultRuleChainCreateRequestSchema>;
export { DefaultRuleChainCreateRequestSchema };
export type DefaultDeviceTransportConfiguration = z.infer<typeof DefaultDeviceTransportConfigurationSchema>;
export { DefaultDeviceTransportConfigurationSchema };
export type DefaultDeviceProfileTransportConfiguration = z.infer<typeof DefaultDeviceProfileTransportConfigurationSchema>;
export { DefaultDeviceProfileTransportConfigurationSchema };
export type DefaultDeviceProfileConfiguration = z.infer<typeof DefaultDeviceProfileConfigurationSchema>;
export { DefaultDeviceProfileConfigurationSchema };
export type DefaultDeviceConfiguration = z.infer<typeof DefaultDeviceConfigurationSchema>;
export { DefaultDeviceConfigurationSchema };
export type DefaultCoapDeviceTypeConfiguration = z.infer<typeof DefaultCoapDeviceTypeConfigurationSchema>;
export { DefaultCoapDeviceTypeConfigurationSchema };
export type DebugIntegrationEventFilter = z.infer<typeof DebugIntegrationEventFilterSchema>;
export { DebugIntegrationEventFilterSchema };
export type DebugConverterEventFilter = z.infer<typeof DebugConverterEventFilterSchema>;
export { DebugConverterEventFilterSchema };
export type DashboardInfo = z.infer<typeof DashboardInfoSchema>;
export { DashboardInfoSchema };
export type Dashboard = z.infer<typeof DashboardSchema>;
export { DashboardSchema };
export type ShortCustomerInfo = z.infer<typeof ShortCustomerInfoSchema>;
export { ShortCustomerInfoSchema };
export type CustomerUsersFilter = z.infer<typeof CustomerUsersFilterSchema>;
export { CustomerUsersFilterSchema };
export type CustomerInfo = z.infer<typeof CustomerInfoSchema>;
export { CustomerInfoSchema };
export type Customer = z.infer<typeof CustomerSchema>;
export { CustomerSchema };
export type CustomTranslation = z.infer<typeof CustomTranslationSchema>;
export { CustomTranslationSchema };
export type CustomTimeSchedule = z.infer<typeof CustomTimeScheduleSchema>;
export { CustomTimeScheduleSchema };
export type CustomTimeScheduleItem = z.infer<typeof CustomTimeScheduleItemSchema>;
export { CustomTimeScheduleItemSchema };
export type CustomMenu = z.infer<typeof CustomMenuSchema>;
export { CustomMenuSchema };
export type CustomMenuItem = z.infer<typeof CustomMenuItemSchema>;
export { CustomMenuItemSchema };
export type Converter = z.infer<typeof ConverterSchema>;
export { ConverterSchema };
export type ConverterId = z.infer<typeof ConverterIdSchema>;
export { ConverterIdSchema };
export type ContactBased_Of_object = z.infer<typeof ContactBased_Of_objectSchema>;
export { ContactBased_Of_objectSchema };
export type ComponentDescriptor = z.infer<typeof ComponentDescriptorSchema>;
export { ComponentDescriptorSchema };
export type ComponentDescriptorId = z.infer<typeof ComponentDescriptorIdSchema>;
export { ComponentDescriptorIdSchema };
export type ComplexVersionCreateRequest = z.infer<typeof ComplexVersionCreateRequestSchema>;
export { ComplexVersionCreateRequestSchema };
export type ComplexFilterPredicate = z.infer<typeof ComplexFilterPredicateSchema>;
export { ComplexFilterPredicateSchema };
export type ComparisonTsValue = z.infer<typeof ComparisonTsValueSchema>;
export { ComparisonTsValueSchema };
export type TsValue = z.infer<typeof TsValueSchema>;
export { TsValueSchema };
export type CoapDeviceTypeConfiguration = z.infer<typeof CoapDeviceTypeConfigurationSchema>;
export { CoapDeviceTypeConfigurationSchema };
export type CoapDeviceTransportConfiguration = z.infer<typeof CoapDeviceTransportConfigurationSchema>;
export { CoapDeviceTransportConfigurationSchema };
export type CoapDeviceProfileTransportConfiguration = z.infer<typeof CoapDeviceProfileTransportConfigurationSchema>;
export { CoapDeviceProfileTransportConfigurationSchema };
export type ClientAttributesQueryingSnmpCommunicationConfig = z.infer<typeof ClientAttributesQueryingSnmpCommunicationConfigSchema>;
export { ClientAttributesQueryingSnmpCommunicationConfigSchema };
export type SnmpMapping = z.infer<typeof SnmpMappingSchema>;
export { SnmpMappingSchema };
export type ClearRule = z.infer<typeof ClearRuleSchema>;
export { ClearRuleSchema };
export type ClaimRequest = z.infer<typeof ClaimRequestSchema>;
export { ClaimRequestSchema };
export type CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration = z.infer<typeof CheckPreProvisionedDevicesDeviceProfileProvisionConfigurationSchema>;
export { CheckPreProvisionedDevicesDeviceProfileProvisionConfigurationSchema };
export type ChangePasswordRequest = z.infer<typeof ChangePasswordRequestSchema>;
export { ChangePasswordRequestSchema };
export type ByteBuffer = z.infer<typeof ByteBufferSchema>;
export { ByteBufferSchema };
export type ByteArrayResource = z.infer<typeof ByteArrayResourceSchema>;
export { ByteArrayResourceSchema };
export type InputStream = z.infer<typeof InputStreamSchema>;
export { InputStreamSchema };
export type Button = z.infer<typeof ButtonSchema>;
export { ButtonSchema };
export type BulkImportResult_Of_Edge = z.infer<typeof BulkImportResult_Of_EdgeSchema>;
export { BulkImportResult_Of_EdgeSchema };
export type BulkImportResult_Of_Device = z.infer<typeof BulkImportResult_Of_DeviceSchema>;
export { BulkImportResult_Of_DeviceSchema };
export type BulkImportResult_Of_Asset = z.infer<typeof BulkImportResult_Of_AssetSchema>;
export { BulkImportResult_Of_AssetSchema };
export type BulkImportRequest = z.infer<typeof BulkImportRequestSchema>;
export { BulkImportRequestSchema };
export type Mapping = z.infer<typeof MappingSchema>;
export { MappingSchema };
export type ColumnMapping = z.infer<typeof ColumnMappingSchema>;
export { ColumnMappingSchema };
export type BranchInfo = z.infer<typeof BranchInfoSchema>;
export { BranchInfoSchema };
export type BooleanFilterPredicate = z.infer<typeof BooleanFilterPredicateSchema>;
export { BooleanFilterPredicateSchema };
export type BlobEntityWithCustomerInfo = z.infer<typeof BlobEntityWithCustomerInfoSchema>;
export { BlobEntityWithCustomerInfoSchema };
export type BlobEntityInfo = z.infer<typeof BlobEntityInfoSchema>;
export { BlobEntityInfoSchema };
export type BlobEntityId = z.infer<typeof BlobEntityIdSchema>;
export { BlobEntityIdSchema };
export type BackupCodeTwoFaProviderConfig = z.infer<typeof BackupCodeTwoFaProviderConfigSchema>;
export { BackupCodeTwoFaProviderConfigSchema };
export type BackupCodeTwoFaAccountConfig = z.infer<typeof BackupCodeTwoFaAccountConfigSchema>;
export { BackupCodeTwoFaAccountConfigSchema };
export type AwsSnsSmsProviderConfiguration = z.infer<typeof AwsSnsSmsProviderConfigurationSchema>;
export { AwsSnsSmsProviderConfigurationSchema };
export type AutoVersionCreateConfig = z.infer<typeof AutoVersionCreateConfigSchema>;
export { AutoVersionCreateConfigSchema };
export type AuditLog = z.infer<typeof AuditLogSchema>;
export { AuditLogSchema };
export type AuditLogId = z.infer<typeof AuditLogIdSchema>;
export { AuditLogIdSchema };
export type AttributesEntityView = z.infer<typeof AttributesEntityViewSchema>;
export { AttributesEntityViewSchema };
export type AttributeExportData = z.infer<typeof AttributeExportDataSchema>;
export { AttributeExportDataSchema };
export type AtomicInteger = z.infer<typeof AtomicIntegerSchema>;
export { AtomicIntegerSchema };
export type AssetTypeFilter = z.infer<typeof AssetTypeFilterSchema>;
export { AssetTypeFilterSchema };
export type AssetSearchQueryFilter = z.infer<typeof AssetSearchQueryFilterSchema>;
export { AssetSearchQueryFilterSchema };
export type AssetSearchQuery = z.infer<typeof AssetSearchQuerySchema>;
export { AssetSearchQuerySchema };
export type RelationsSearchParameters = z.infer<typeof RelationsSearchParametersSchema>;
export { RelationsSearchParametersSchema };
export type AssetProfileInfo = z.infer<typeof AssetProfileInfoSchema>;
export { AssetProfileInfoSchema };
export type AssetProfile = z.infer<typeof AssetProfileSchema>;
export { AssetProfileSchema };
export type RuleChainId = z.infer<typeof RuleChainIdSchema>;
export { RuleChainIdSchema };
export type AssetInfo = z.infer<typeof AssetInfoSchema>;
export { AssetInfoSchema };
export type EntityInfo = z.infer<typeof EntityInfoSchema>;
export { EntityInfoSchema };
export type Asset = z.infer<typeof AssetSchema>;
export { AssetSchema };
export type AssetProfileId = z.infer<typeof AssetProfileIdSchema>;
export { AssetProfileIdSchema };
export type AssetId = z.infer<typeof AssetIdSchema>;
export { AssetIdSchema };
export type ArrayNode = z.infer<typeof ArrayNodeSchema>;
export { ArrayNodeSchema };
export type ApiUsageStateFilter = z.infer<typeof ApiUsageStateFilterSchema>;
export { ApiUsageStateFilterSchema };
export type ApiUsageLimitNotificationRuleTriggerConfig = z.infer<typeof ApiUsageLimitNotificationRuleTriggerConfigSchema>;
export { ApiUsageLimitNotificationRuleTriggerConfigSchema };
export type AnyTimeSchedule = z.infer<typeof AnyTimeScheduleSchema>;
export { AnyTimeScheduleSchema };
export type AllowedPermissionsInfo = z.infer<typeof AllowedPermissionsInfoSchema>;
export { AllowedPermissionsInfoSchema };
export type MergedUserPermissions = z.infer<typeof MergedUserPermissionsSchema>;
export { MergedUserPermissionsSchema };
export type MergedGroupTypePermissionInfo = z.infer<typeof MergedGroupTypePermissionInfoSchema>;
export { MergedGroupTypePermissionInfoSchema };
export type EntityGroupId = z.infer<typeof EntityGroupIdSchema>;
export { EntityGroupIdSchema };
export type MergedGroupPermissionInfo = z.infer<typeof MergedGroupPermissionInfoSchema>;
export { MergedGroupPermissionInfoSchema };
export type AllowCreateNewDevicesDeviceProfileProvisionConfiguration = z.infer<typeof AllowCreateNewDevicesDeviceProfileProvisionConfigurationSchema>;
export { AllowCreateNewDevicesDeviceProfileProvisionConfigurationSchema };
export type AllUsersFilter = z.infer<typeof AllUsersFilterSchema>;
export { AllUsersFilterSchema };
export type AlarmRule = z.infer<typeof AlarmRuleSchema>;
export { AlarmRuleSchema };
export type DashboardId = z.infer<typeof DashboardIdSchema>;
export { DashboardIdSchema };
export type AlarmSchedule = z.infer<typeof AlarmScheduleSchema>;
export { AlarmScheduleSchema };
export type DynamicValue_Of_string = z.infer<typeof DynamicValue_Of_stringSchema>;
export { DynamicValue_Of_stringSchema };
export type AlarmNotificationRuleTriggerConfig = z.infer<typeof AlarmNotificationRuleTriggerConfigSchema>;
export { AlarmNotificationRuleTriggerConfigSchema };
export type AlarmInfo = z.infer<typeof AlarmInfoSchema>;
export { AlarmInfoSchema };
export type AlarmDataQuery = z.infer<typeof AlarmDataQuerySchema>;
export { AlarmDataQuerySchema };
export type AlarmDataPageLink = z.infer<typeof AlarmDataPageLinkSchema>;
export { AlarmDataPageLinkSchema };
export type EntityDataSortOrder = z.infer<typeof EntityDataSortOrderSchema>;
export { EntityDataSortOrderSchema };
export type AlarmData = z.infer<typeof AlarmDataSchema>;
export { AlarmDataSchema };
export type AlarmCountQuery = z.infer<typeof AlarmCountQuerySchema>;
export { AlarmCountQuerySchema };
export type KeyFilter = z.infer<typeof KeyFilterSchema>;
export { KeyFilterSchema };
export type EntityKey = z.infer<typeof EntityKeySchema>;
export { EntityKeySchema };
export type EntityFilter = z.infer<typeof EntityFilterSchema>;
export { EntityFilterSchema };
export type AlarmCondition = z.infer<typeof AlarmConditionSchema>;
export { AlarmConditionSchema };
export type AlarmConditionSpec = z.infer<typeof AlarmConditionSpecSchema>;
export { AlarmConditionSpecSchema };
export type AlarmConditionFilter = z.infer<typeof AlarmConditionFilterSchema>;
export { AlarmConditionFilterSchema };
export type KeyFilterPredicate = z.infer<typeof KeyFilterPredicateSchema>;
export { KeyFilterPredicateSchema };
export type AlarmConditionFilterKey = z.infer<typeof AlarmConditionFilterKeySchema>;
export { AlarmConditionFilterKeySchema };
export type AlarmCommentNotificationRuleTriggerConfig = z.infer<typeof AlarmCommentNotificationRuleTriggerConfigSchema>;
export { AlarmCommentNotificationRuleTriggerConfigSchema };
export type AlarmCommentInfo = z.infer<typeof AlarmCommentInfoSchema>;
export { AlarmCommentInfoSchema };
export type AlarmComment = z.infer<typeof AlarmCommentSchema>;
export { AlarmCommentSchema };
export type AlarmCommentId = z.infer<typeof AlarmCommentIdSchema>;
export { AlarmCommentIdSchema };
export type AlarmAssignmentNotificationRuleTriggerConfig = z.infer<typeof AlarmAssignmentNotificationRuleTriggerConfigSchema>;
export { AlarmAssignmentNotificationRuleTriggerConfigSchema };
export type AlarmAssignee = z.infer<typeof AlarmAssigneeSchema>;
export { AlarmAssigneeSchema };
export type Alarm = z.infer<typeof AlarmSchema>;
export { AlarmSchema };
export type UserId = z.infer<typeof UserIdSchema>;
export { UserIdSchema };
export type EntityId = z.infer<typeof EntityIdSchema>;
export { EntityIdSchema };
export type CustomerId = z.infer<typeof CustomerIdSchema>;
export { CustomerIdSchema };
export type AlarmId = z.infer<typeof AlarmIdSchema>;
export { AlarmIdSchema };
export type AffectedUserFilter = z.infer<typeof AffectedUserFilterSchema>;
export { AffectedUserFilterSchema };
export type AffectedTenantAdministratorsFilter = z.infer<typeof AffectedTenantAdministratorsFilterSchema>;
export { AffectedTenantAdministratorsFilterSchema };
export type AdminSettings = z.infer<typeof AdminSettingsSchema>;
export { AdminSettingsSchema };
export type JsonNode = z.infer<typeof JsonNodeSchema>;
export { JsonNodeSchema };
export type TenantId = z.infer<typeof TenantIdSchema>;
export { TenantIdSchema };
export type AdminSettingsId = z.infer<typeof AdminSettingsIdSchema>;
export { AdminSettingsIdSchema };
export type ActivateUserRequest = z.infer<typeof ActivateUserRequestSchema>;
export { ActivateUserRequestSchema };
export type AccountTwoFaSettings = z.infer<typeof AccountTwoFaSettingsSchema>;
export { AccountTwoFaSettingsSchema };
export type TwoFaAccountConfig = z.infer<typeof TwoFaAccountConfigSchema>;
export { TwoFaAccountConfigSchema };
