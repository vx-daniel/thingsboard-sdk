import { BaseVXOlympusClient } from '../../base-client';
export declare class UserPermissionsControllerClient extends BaseVXOlympusClient {
    getAllowedPermissionsUsingGET(options?: RequestInit): Promise<{
        allowedResources: ("ALARM" | "ADMIN_SETTINGS" | "ALL" | "API_USAGE_STATE" | "ASSET" | "ASSET_GROUP" | "ASSET_PROFILE" | "AUDIT_LOG" | "BLOB_ENTITY" | "CONVERTER" | "CUSTOMER" | "CUSTOMER_GROUP" | "DASHBOARD" | "DASHBOARD_GROUP" | "DEVICE" | "DEVICE_GROUP" | "DEVICE_PROFILE" | "EDGE" | "EDGE_GROUP" | "ENTITY_VIEW" | "ENTITY_VIEW_GROUP" | "GROUP_PERMISSION" | "INTEGRATION" | "NOTIFICATION" | "OAUTH2_CONFIGURATION_INFO" | "OAUTH2_CONFIGURATION_TEMPLATE" | "OTA_PACKAGE" | "PROFILE" | "QUEUE" | "ROLE" | "RULE_CHAIN" | "SCHEDULER_EVENT" | "TB_RESOURCE" | "TENANT" | "TENANT_PROFILE" | "USER" | "USER_GROUP" | "VERSION_CONTROL" | "WHITE_LABELING" | "WIDGETS_BUNDLE" | "WIDGET_TYPE")[];
        operationsByResource: Record<string, string[]>;
        allowedForGroupRoleOperations: ("ALL" | "ADD_TO_GROUP" | "ASSIGN_TO_TENANT" | "CHANGE_OWNER" | "CLAIM_DEVICES" | "CREATE" | "DELETE" | "IMPERSONATE" | "READ" | "READ_ATTRIBUTES" | "READ_CREDENTIALS" | "READ_TELEMETRY" | "REMOVE_FROM_GROUP" | "RPC_CALL" | "SHARE_GROUP" | "WRITE" | "WRITE_ATTRIBUTES" | "WRITE_CREDENTIALS" | "WRITE_TELEMETRY")[];
        allowedForGroupOwnerOnlyOperations: ("ALL" | "ADD_TO_GROUP" | "ASSIGN_TO_TENANT" | "CHANGE_OWNER" | "CLAIM_DEVICES" | "CREATE" | "DELETE" | "IMPERSONATE" | "READ" | "READ_ATTRIBUTES" | "READ_CREDENTIALS" | "READ_TELEMETRY" | "REMOVE_FROM_GROUP" | "RPC_CALL" | "SHARE_GROUP" | "WRITE" | "WRITE_ATTRIBUTES" | "WRITE_CREDENTIALS" | "WRITE_TELEMETRY")[];
        allowedForGroupOwnerOnlyGroupOperations: ("ALL" | "ADD_TO_GROUP" | "ASSIGN_TO_TENANT" | "CHANGE_OWNER" | "CLAIM_DEVICES" | "CREATE" | "DELETE" | "IMPERSONATE" | "READ" | "READ_ATTRIBUTES" | "READ_CREDENTIALS" | "READ_TELEMETRY" | "REMOVE_FROM_GROUP" | "RPC_CALL" | "SHARE_GROUP" | "WRITE" | "WRITE_ATTRIBUTES" | "WRITE_CREDENTIALS" | "WRITE_TELEMETRY")[];
        userOwnerId?: any;
        userPermissions?: any;
    }>;
}
