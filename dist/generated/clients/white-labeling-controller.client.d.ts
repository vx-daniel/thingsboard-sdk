import { BaseVXOlympusClient } from '../../base-client';
import * as schemas from '../schemas';
export declare class WhiteLabelingControllerClient extends BaseVXOlympusClient {
    getLoginWhiteLabelParamsUsingGET(options?: RequestInit): Promise<{
        whiteLabelingEnabled: boolean;
        logoImageUrl: string;
        logoImageHeight: number;
        appTitle: string;
        helpLinkBaseUrl: string;
        uiHelpBaseUrl: string;
        enableHelpLinks: boolean;
        showNameVersion: boolean;
        platformName: string;
        platformVersion: string;
        customCss: string;
        pageBackgroundColor: string;
        darkForeground: boolean;
        domainName: string;
        baseUrl: string;
        prohibitDifferentUrl: boolean;
        adminSettingsId: string;
        showNameBottom: boolean;
        favicon?: any;
        paletteSettings?: any;
    }>;
    getCurrentLoginWhiteLabelParamsUsingGET(customerId: string, options?: RequestInit): Promise<{
        whiteLabelingEnabled: boolean;
        logoImageUrl: string;
        logoImageHeight: number;
        appTitle: string;
        helpLinkBaseUrl: string;
        uiHelpBaseUrl: string;
        enableHelpLinks: boolean;
        showNameVersion: boolean;
        platformName: string;
        platformVersion: string;
        customCss: string;
        pageBackgroundColor: string;
        darkForeground: boolean;
        domainName: string;
        baseUrl: string;
        prohibitDifferentUrl: boolean;
        adminSettingsId: string;
        showNameBottom: boolean;
        favicon?: any;
        paletteSettings?: any;
    }>;
    getCurrentWhiteLabelParamsUsingGET(customerId: string, options?: RequestInit): Promise<{
        whiteLabelingEnabled: boolean;
        logoImageUrl: string;
        logoImageHeight: number;
        appTitle: string;
        helpLinkBaseUrl: string;
        uiHelpBaseUrl: string;
        enableHelpLinks: boolean;
        showNameVersion: boolean;
        platformName: string;
        platformVersion: string;
        customCss: string;
        favicon?: any;
        paletteSettings?: any;
    }>;
    isCustomerWhiteLabelingAllowedUsingGET(options?: RequestInit): Promise<any>;
    isWhiteLabelingAllowedUsingGET(options?: RequestInit): Promise<any>;
    saveLoginWhiteLabelParamsUsingPOST(customerId: string, data: schemas.LoginWhiteLabelingParams, options?: RequestInit): Promise<{
        whiteLabelingEnabled: boolean;
        logoImageUrl: string;
        logoImageHeight: number;
        appTitle: string;
        helpLinkBaseUrl: string;
        uiHelpBaseUrl: string;
        enableHelpLinks: boolean;
        showNameVersion: boolean;
        platformName: string;
        platformVersion: string;
        customCss: string;
        pageBackgroundColor: string;
        darkForeground: boolean;
        domainName: string;
        baseUrl: string;
        prohibitDifferentUrl: boolean;
        adminSettingsId: string;
        showNameBottom: boolean;
        favicon?: any;
        paletteSettings?: any;
    }>;
    saveMailTemplatesUsingPOST(data: schemas.JsonNode, options?: RequestInit): Promise<{}>;
    getMailTemplatesUsingGET(systemByDefault: boolean, options?: RequestInit): Promise<{}>;
    previewWhiteLabelParamsUsingPOST(data: schemas.WhiteLabelingParams, options?: RequestInit): Promise<{
        whiteLabelingEnabled: boolean;
        logoImageUrl: string;
        logoImageHeight: number;
        appTitle: string;
        helpLinkBaseUrl: string;
        uiHelpBaseUrl: string;
        enableHelpLinks: boolean;
        showNameVersion: boolean;
        platformName: string;
        platformVersion: string;
        customCss: string;
        favicon?: any;
        paletteSettings?: any;
    }>;
    getWhiteLabelParamsUsingGET(options?: RequestInit): Promise<{
        whiteLabelingEnabled: boolean;
        logoImageUrl: string;
        logoImageHeight: number;
        appTitle: string;
        helpLinkBaseUrl: string;
        uiHelpBaseUrl: string;
        enableHelpLinks: boolean;
        showNameVersion: boolean;
        platformName: string;
        platformVersion: string;
        customCss: string;
        favicon?: any;
        paletteSettings?: any;
    }>;
    saveWhiteLabelParamsUsingPOST(customerId: string, data: schemas.WhiteLabelingParams, options?: RequestInit): Promise<{
        whiteLabelingEnabled: boolean;
        logoImageUrl: string;
        logoImageHeight: number;
        appTitle: string;
        helpLinkBaseUrl: string;
        uiHelpBaseUrl: string;
        enableHelpLinks: boolean;
        showNameVersion: boolean;
        platformName: string;
        platformVersion: string;
        customCss: string;
        favicon?: any;
        paletteSettings?: any;
    }>;
}
